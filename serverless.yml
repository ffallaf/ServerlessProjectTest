service: rest-api-dynamodb-with-tests

frameworkVersion: ">=1.23.0 <2.0.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-mocha-plugin
  - serverless-aws-models

custom:
  dynamodb: 
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations
  models:
    CreateItemRequest:
      ContentType: "application/json"
      Schema: ${file(functions/items/model/itemModel.json)}

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  createItem:
    handler: functions/items/create.item.createItemHandler
    events:
      - http:
          path: item
          method: post
          cors: true
          requestModels:
            "application/json": "CreateItemRequest"

resources:
  Resources:
    test1Table:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - 
            AttributeName: id 
            AttributeType: S
        KeySchema:
          - 
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

